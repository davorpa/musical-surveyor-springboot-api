# Spring Boot Application Properties
# (https://docs.spring.io/spring-boot/docs/current/reference/html/application-properties.html)

#
# Best performance practices by
# https://towardsdev.com/spring-boot-data-access-layer-best-practices-c544d400de7b
# https://vladmihalcea.com/spring-boot-application-properties/
# https://thorben-janssen.com/configuring-spring-data-jpa-with-spring-boot/



##################################################################
##                      Web Configuration                       ##
##################################################################

## Server HTTP port. Default=8080
server.port=8080

## Web error page
server.error.whitelabel.enabled=true
## When to include exception class name as part of error attributes. Values: true/false
server.error.include-exception=true
## When to include exception message as part of error attributes. Values:
#  - ALWAYS
#  - NEVER
#  - ON_PARAM: if a "message" request param is present
server.error.include-message=always
## When to include binding errors as part of error attributes. Values:
#  - ALWAYS
#  - NEVER
#  - ON_PARAM: if a "errors" request param is present
server.error.include-binding-errors=always
## When to include exception stacktrace as part of error attributes. Values:
#  - ALWAYS
#  - NEVER
#  - ON_PARAM: if a "trace" request param is present
server.error.include-stacktrace=on_param

## Web HTTPS settings
server.tomcat.remoteip.remote-ip-header=x-forwarded-for
server.tomcat.remoteip.protocol-header=x-forwarded-proto

### Web Gzip
server.compression.enabled=true
server.compression.mime-types=application/json,application/hal+json,application/xml,text/html,text/xml,text/plain,application/javascript,text/css

## Web static resources versioning
spring.web.resources.chain.strategy.content.enabled=true
spring.web.resources.chain.strategy.content.paths=/js/**,/css/**

### Web caching
spring.web.resources.cache.cachecontrol.max-age=30d



##################################################################
##                 Database Configuration                       ##
##################################################################

## DataSource properties
spring.datasource.generate-unique-name=false
spring.datasource.name=testdb
#spring.datasource.url=
#spring.datasource.username=
#spring.datasource.password=


##################################################################
##              JPA/Hibernate Configuration                     ##
##################################################################

logging.level.org.hibernate=INFO
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.orm.jdbc.bind=TRACE
logging.level.org.hibernate.type.descriptor.sql=TRACE
logging.level.org.hibernate.SQL_SLOW=INFO

spring.jpa.show-sql=false

## Hibernate DDL mode.
# This is actually a shortcut for the "hibernate.hbm2ddl.auto" property.
# Defaults to "create-drop" when using an embedded database and no schema
# manager was detected. Otherwise, defaults to "none".
# Values:
# - create:  Hibernate first drops existing tables and then creates new tables.
# - update:  The object model created based on the mappings (annotations or XML)
#            is compared with the existing schema, and then Hibernate updates the
#            schema according to the diff. It never deletes the existing tables
#            or columns even if they are no longer required by the application.
# - create-drop:  similar to create, with the addition that Hibernate will drop
#                 the database after all operations are completed; typically used
#                 for unit testing
# - validate:  Hibernate only validates whether the tables and columns exist;
#              otherwise, it throws an exception.
# - none:  This value effectively turns off the DDL generation.
spring.jpa.hibernate.ddl-auto=create-drop

spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.use_sql_comments=true

